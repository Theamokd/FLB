# Generated by Django 3.1.13 on 2021-08-06 14:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('mainsite', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name="Article's title")),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Article Slug')),
                ('sub', models.CharField(blank=True, max_length=250, verbose_name="Article's subtitle")),
                ('abstract', models.TextField(blank=True, verbose_name="Article's abstract")),
                ('text', models.TextField(blank=True, verbose_name="Article's text")),
                ('file', models.FileField(blank=True, upload_to='files/articles', verbose_name="Article's file")),
                ('link', models.CharField(blank=True, max_length=150, verbose_name='Link to article')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded on')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed on')),
                ('custom_txt', models.CharField(blank=True, max_length=350, verbose_name='Custom text')),
                ('custom_num', models.IntegerField(blank=True, null=True, verbose_name='Custom number')),
                ('custom_bool', models.BooleanField(default=False, verbose_name='Custom bool')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-issue__date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name="Author's full name")),
                ('first_name', models.CharField(max_length=50, verbose_name="Author's first name")),
                ('last_name', models.CharField(max_length=50, verbose_name="Author's last name")),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Author Slug')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainsite.organization', verbose_name="Author's organization")),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Related user')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Journal name')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Journal Slug')),
                ('desc', models.TextField(blank=True, verbose_name='Journal description')),
                ('link', models.CharField(blank=True, max_length=150, verbose_name='Link to journal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded on')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed on')),
                ('f_cover', models.ImageField(blank=True, default='defaults/default-journal.png', null=True, upload_to='covers/', verbose_name='The front cover image')),
                ('b_cover', models.ImageField(blank=True, null=True, upload_to='covers/', verbose_name='The back cover image')),
                ('custom_txt', models.CharField(blank=True, max_length=350, verbose_name='Custom text')),
                ('custom_num', models.IntegerField(blank=True, null=True, verbose_name='Custom number')),
                ('custom_bool', models.BooleanField(default=False, verbose_name='Custom bool')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainsite.city', verbose_name="Journal's city")),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainsite.county', verbose_name="Journal's county")),
                ('editors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Editors of the journal')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainsite.organization', verbose_name="Journal's publisher")),
            ],
            options={
                'verbose_name': 'Journal',
                'verbose_name_plural': 'Journals',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Issue name')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Issue Slug')),
                ('volume', models.SmallIntegerField(blank=True, null=True, verbose_name='Volume number')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Publishing date')),
                ('issn', models.CharField(blank=True, max_length=50, verbose_name='ISSN number')),
                ('file', models.FileField(blank=True, upload_to='files/issues', verbose_name='The Issue file (pdf)')),
                ('desc', models.TextField(blank=True, verbose_name='Issue description')),
                ('link', models.CharField(blank=True, max_length=150, verbose_name='Link to journal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded on')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed on')),
                ('f_cover', models.ImageField(blank=True, default='defaults/default-issue.png', null=True, upload_to='covers/', verbose_name='The front cover image')),
                ('b_cover', models.ImageField(blank=True, null=True, upload_to='covers/', verbose_name='The back cover image')),
                ('custom_txt', models.CharField(blank=True, max_length=350, verbose_name='Custom text')),
                ('custom_num', models.IntegerField(blank=True, null=True, verbose_name='Custom number')),
                ('custom_bool', models.BooleanField(default=False, verbose_name='Custom bool')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iss_creators', to=settings.AUTH_USER_MODEL, verbose_name='Issue creator')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='literature.journal', verbose_name="Issue's journal")),
                ('redactor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='literature.author', verbose_name='The redactor of the issue')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issues',
                'ordering': ['-date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Book title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Book Slug')),
                ('desc', models.TextField(blank=True, verbose_name='Book description')),
                ('link', models.CharField(blank=True, max_length=150, verbose_name='Link to book')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded on')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed on')),
                ('f_cover', models.ImageField(blank=True, default='defaults/default-journal.png', null=True, upload_to='covers/', verbose_name='The front cover image')),
                ('b_cover', models.ImageField(blank=True, null=True, upload_to='covers/', verbose_name='The back cover image')),
                ('volume', models.SmallIntegerField(blank=True, null=True, verbose_name='Volume number')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Publishing date')),
                ('issn', models.CharField(blank=True, max_length=50, verbose_name='ISSN number')),
                ('file', models.FileField(blank=True, upload_to='files/books', verbose_name='The Issue file (pdf)')),
                ('custom_txt', models.CharField(blank=True, max_length=350, verbose_name='Custom text')),
                ('custom_num', models.IntegerField(blank=True, null=True, verbose_name='Custom number')),
                ('custom_bool', models.BooleanField(default=False, verbose_name='Custom bool')),
                ('authors', models.ManyToManyField(blank=True, related_name='books_authors', to='literature.Author', verbose_name="Books's authors")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bok_creators', to=settings.AUTH_USER_MODEL, verbose_name='Book creator')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['-date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Article_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Image title')),
                ('desc', models.CharField(blank=True, max_length=250, verbose_name='Image description')),
                ('img', models.ImageField(upload_to='article_images', verbose_name='The image name')),
                ('photo_by', models.CharField(blank=True, max_length=50, verbose_name="Photographers's name")),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='literature.article', verbose_name='Related article')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='authors', to='literature.Author', verbose_name="Article's authors"),
        ),
        migrations.AddField(
            model_name='article',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='art_creators', to=settings.AUTH_USER_MODEL, verbose_name='Article creator'),
        ),
        migrations.AddField(
            model_name='article',
            name='issue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='literature.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['name'], name='literature__name_a6539d_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['desc'], name='literature__desc_722236_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['name'], name='literature__name_c789bb_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['date'], name='literature__date_bb6359_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['journal'], name='literature__journal_81e2d9_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['name'], name='literature__name_0e1aea_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['desc'], name='literature__desc_eb1771_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['date'], name='literature__date_5c5b44_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['name'], name='literature__name_d7b301_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['first_name'], name='literature__first_n_b397f0_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['last_name'], name='literature__last_na_26d2fc_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['name'], name='literature__name_485989_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['abstract'], name='literature__abstrac_7b608a_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['issue'], name='literature__issue_i_b25700_idx'),
        ),
    ]
